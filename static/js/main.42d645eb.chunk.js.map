{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["nums","Array","from","length","map","_","i","delay","ms","a","Promise","resolve","setTimeout","STATUS","idle","playing","answer","result","Object","freeze","App","useState","text","setText","setResult","counter","useRef","inpRef","progRef","status","setStatus","round","num","max","Math","floor","random","current","start","value","focus","r","className","ref","type","defaultValue","onClick","getContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAGMA,EAAOC,MAAMC,KAAK,CAACC,OAAQ,KAAKC,KAAI,SAACC,EAAGC,GAC1C,OAAOA,EAAI,EAAIA,EAAI,EAAIA,EAAI,K,SAOhBC,E,8EAAf,WAAqBC,GAArB,SAAAC,EAAA,+EACW,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASH,OADtD,4C,sBAIA,IAAMK,EAAS,CACXC,KAAM,EACNC,QAAS,EACTC,OAAQ,EACRC,OAAQ,GAEZC,OAAOC,OAAON,GA6ECO,MA3Ef,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACJC,EADI,KACEC,EADF,OAEiBF,mBAAS,MAF1B,mBAEJJ,EAFI,KAEIO,EAFJ,KAGLC,EAAUC,iBAAO,GACjBC,EAASD,mBACTE,EAAUF,mBALL,EAMiBL,mBAASR,EAAOC,MANjC,mBAMJe,EANI,KAMIC,EANJ,KAQLC,EAAK,uCAAG,4BAAAtB,EAAA,6DACJuB,EAAMhC,GAzBEiC,EAyBgBjC,EAAKG,OAAS,EAxBzC+B,KAAKC,MAAMD,KAAKE,SAAWH,KAyB9BV,EAAQS,GACRP,EAAQY,SAAWL,EAHT,SAIJzB,EAAM,MAJF,iCAxBlB,IAAsB0B,IAwBJ,OAAH,qDAOLK,EAAK,uCAAG,8BAAA7B,EAAA,sDACVqB,EAAUjB,EAAOE,SACRT,EAAI,EAFH,YAEMA,EAAI,IAFV,gCAGAyB,IAHA,OAINH,EAAQS,QAAQE,MAAQjC,EAAI,EAJtB,OAEcA,IAFd,6BAMVwB,EAAUjB,EAAOG,QANP,UAOJT,EAAM,KAPF,eAQVoB,EAAOU,QAAQG,QACfb,EAAOU,QAAQE,MAAQ,KATb,UAUJhC,EAAM,KAVF,eAWJkC,EAAIhB,EAAQY,SAAWV,EAAOU,QAAQE,MAAQ,UAAY,SAChEZ,EAAOU,QAAQE,MAAQ,KACvBf,EAAUiB,GACVX,EAAUjB,EAAOI,QAdP,UAeJV,EAAM,KAfF,QAgBVuB,EAAUjB,EAAOC,MAhBP,4CAAH,qDAqDX,OACI,qBAAK4B,UAAU,uDAAf,SAnCe,WACf,OAAQb,GACJ,KAAKhB,EAAOE,QACR,OACI,sBAAK2B,UAAU,4CAAf,UACI,qBAAKA,UAAU,qBAAf,SAAqCpB,IACrC,0BAAUiB,MAAO,EAAGI,IAAKf,EAASK,IAAK,QAGnD,KAAKpB,EAAOG,OACR,OACI,sBAAK0B,UAAU,sBAAf,UACI,qBAAKA,UAAU,wDAAf,0BACA,uBAAOE,KAAK,SAASF,UAAU,8DACxBC,IAAKhB,EAAQkB,aAAc,UAG9C,KAAKhC,EAAOI,OACR,OACI,sBAAKyB,UAAU,8CAAf,sBAAuEzB,KAE/E,QACI,OACI,sBAAKyB,UAAU,wCAAf,UACI,qBAAKA,UAAU,0BAAf,6BACA,wBACIA,UAAU,wHACVI,QAASR,EAFb,uBAWXS,MCjFEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42d645eb.chunk.js","sourcesContent":["import './App.css';\nimport {useRef, useState} from \"react\";\n\nconst nums = Array.from({length: 18}).map((_, i) => {\n    return i > 8 ? i - 8 : i - 9\n})\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\nasync function delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst STATUS = {\n    idle: 0,\n    playing: 1,\n    answer: 2,\n    result: 3,\n}\nObject.freeze(STATUS)\n\nfunction App() {\n    const [text, setText] = useState(null);\n    const [result, setResult] = useState(null);\n    const counter = useRef(0);\n    const inpRef = useRef();\n    const progRef = useRef();\n    const [status, setStatus] = useState(STATUS.idle);\n\n    const round = async () => {\n        const num = nums[getRandomInt(nums.length - 1)]\n        setText(num)\n        counter.current += num\n        await delay(1500)\n    }\n\n    const start = async () => {\n        setStatus(STATUS.playing);\n        for (let i = 0; i < 10; i++) {\n            await round();\n            progRef.current.value = i + 1\n        }\n        setStatus(STATUS.answer)\n        await delay(100)\n        inpRef.current.focus()\n        inpRef.current.value = null;\n        await delay(4000)\n        const r = counter.current == inpRef.current.value ? \"Cleared\" : \"Failed\"\n        inpRef.current.value = null;\n        setResult(r)\n        setStatus(STATUS.result)\n        await delay(4000)\n        setStatus(STATUS.idle)\n    }\n\n    const getContent = () => {\n        switch (status) {\n            case STATUS.playing:\n                return (\n                    <div className='flex items-center justify-center flex-col'>\n                        <div className=\"counter text-white\">{text}</div>\n                        <progress value={0} ref={progRef} max={10}/>\n                    </div>\n                );\n            case STATUS.answer:\n                return (\n                    <div className=\"text-center lg:flex\">\n                        <div className=\"text-2xl md:text-4xl xl:text-6xl mb-6 lg:mb-0 lg:mr-2\">Enter Answer</div>\n                        <input type=\"number\" className=\"text-center bg-transparent text-2xl md:text-4xl xl:text-6xl\"\n                               ref={inpRef} defaultValue={null}/>\n                    </div>\n                );\n            case STATUS.result:\n                return (\n                    <div className=\"text-4xl md:text-6xl lg:text-8xl text-white\">Result : {result}</div>\n                );\n            default:\n                return (\n                    <div className=\"flex flex-col items-center text-white\">\n                        <div className=\"text-4xl mb-9 font-bold\">Ready to begin?</div>\n                        <button\n                            className=\"px-14 py-4 hover:text-black text-2xl border-2 w-min border-white rounded hover:bg-white cursor-pointer transition-all\"\n                            onClick={start}>Start\n                        </button>\n                    </div>\n                );\n        }\n    }\n\n    return (\n        <div className=\"bg-red-600 h-screen flex justify-center items-center\">\n            {getContent()}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './global/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}